{
  "openapi": "3.0.1",
  "info": {
    "title": "JSX Mail Cloud API",
    "description": "Start using the JSX Mail Cloud by the API",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.jsxmail.org"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/sender": {
      "get": {
        "description": "Get all senders",
        "responses": {
          "200": {
            "description": "Senders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sender"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new sender",
        "requestBody": {
          "description": "The data of the sender to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSender"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Sender created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sender"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Domain not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Sender already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sender/send": {
      "post": {
        "description": "Send an email using the JSX Mail Cloud. Supports file attachments, bulk sending, custom payloads, and contact association.",
        "requestBody": {
          "description": "The data of the email to send",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The email was sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or insufficient balance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sender/{id}": {
      "delete": {
        "description": "Deletes a single sender based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of sender to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sender deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResult"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Sender not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/file": {
      "post": {
        "description": "Upload a file to the JSX Mail Cloud",
        "requestBody": {
          "description": "The file to upload",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "File uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "List all files",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "description": "The number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilePagination"
                }
              }
            }
          }
        }
      }
    },
    "/file/{id}": {
      "delete": {
        "description": "Delete a file by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of file to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResult"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PaginationResult": {
        "required": ["totalPages", "total", "hasNext"],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          }
        }
      },
      "File": {
        "required": [
          "createdAt",
          "encoding",
          "hash",
          "id",
          "key",
          "mimeType",
          "originalName",
          "size",
          "url"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "encoding": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "originalName": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "FilePagination": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationResult"
          },
          {
            "type": "object",
            "properties": {
              "files": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        ]
      },
      "SimpleResult": {
        "required": ["message"],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "NewSender": {
        "required": ["username", "name", "domainName"],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "domainName": {
            "type": "string"
          }
        }
      },
      "Sender": {
        "required": ["id", "username", "name", "domainName"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "domainId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Message": {
        "required": ["id", "to", "subject", "senderId", "status", "userId"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "to": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string"
          },
          "senderId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NewMessage": {
        "required": ["subject", "html", "to"],
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "example": "Hello, world!",
            "description": "The subject line of the email."
          },
          "html": {
            "type": "string",
            "example": "<h1>Hello, world!</h1>",
            "description": "The HTML content of the email body."
          },
          "to": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "test@example.com"
            },
            "description": "Array of recipient email addresses."
          },
          "sender": {
            "type": "string",
            "example": "sender@jsxmail.org",
            "description": "Optional email address of the sender. If not provided, the most recently created sender will be used."
          },
          "filesIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional array of file IDs to attach to the email. This is in a close beta and requires a special permission. Contact support to get access."
          },
          "bulkSendingId": {
            "type": "string",
            "example": "b4f8d8c4-3c2e-4f2a-9f2e-3c2e4f2a9f2e",
            "description": "Optional ID to associate the email with a bulk sending operation."
          },
          "customPayload": {
            "type": "object",
            "example": {
              "key1": "value1",
              "key2": "value2"
            },
            "description": "Optional custom data to associate with the message. This is used to pass data like {{variable}} to the email body or subject."
          },
          "contactId": {
            "type": "string",
            "example": "a1b2c3d4-5e6f-7g8h-9i0j-1k2l3m4n5o6p",
            "description": "Optional ID of a contact to associate the email with."
          }
        }
      },
      "Error": {
        "required": ["message", "statusCode", "isError", "timestamp", "path"],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "isError": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "path": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
